services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: fkvdb
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fkvdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  ml:
    build: ./ml
    ports:
      - "8001:8001"
    volumes:
      - ./ml:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  python-app:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - DBHOST=postgres
      - DBPORT=5432
      - DBUSER=postgres
      - DBPASS=12345678
      - DBNAME=fkvdb
      - ML_SERVICE_URL=http://ml:8001
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      ml:
        condition: service_healthy
    networks:
      - app-network

  node-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
